<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me.mapper.BlogMapper">

    <!--通过用户id查询用户的所有个人博客分类-->
    <select id="findClass" parameterType="int" resultType="com.me.dto.ClassificationDto">

       SELECT e.pt_id classId,d.user_id userId,e.type_name className,COUNT(*) classNum
        from pbt_middle p
        INNER JOIN user_blog d
        on d.blog_id=p.blog_id and d.user_id=#{userId}
        INNER JOIN person_type e
        on p.bt_id=e.pt_id
        GROUP BY p.pid,d.ub_id
    </select>

    <!--通过用户 id查询某年某月更新博客数量-->
    <select id="findBlogNum" parameterType="int" resultType="com.me.dto.BlogNumDto">
        SELECT m.user_id userId,m.year years,m.month months,COUNT(*) blogNum from
        (SELECT u.user_id user_id,YEAR(b.create_time) year,MONTH(b.create_time) month from user_blog u
        INNER JOIN bloginfo b on b.blog_id=u.blog_id and u.user_id=#{userId}) m
        GROUP BY m.user_id,m.year,m.month
    </select>
    <!--通过用户id查询用户的所有博客-->
    <select id="showBlog" parameterType="int" resultType="com.me.dto.BlogDto">

        SELECT any_value(m.blog_id) id,any_value(m.blog_title) title,any_value(m.blog_content) content,any_value(m.create_time) time,any_value(m.user_id) userId,any_value(m.seeNum) seeNum,case when any_value(c.comment_id) is null then 0 else COUNT(*) end commentNum from
        (SELECT any_value(o.blog_id) blog_id,any_value(o.blog_title) blog_title,any_value(o.blog_content) blog_content,any_value(o.create_time) create_time,any_value(b.browse_id) browse_id,any_value(b.browse_time) browse_time,any_value(g.user_id) user_id,case when any_value(b.browse_id) is null then 0 else COUNT(*) end seeNum
        from bloginfo o
        INNER JOIN user_blog g on g.user_id=#{userId} and g.blog_id=o.blog_id
        LEFT JOIN browse b on b.blog_id=o.blog_id and b.user_id=g.user_id
        GROUP BY o.blog_id) m
        LEFT JOIN comment1 c on c.blog_id=m.blog_id and m.user_id=c.user_id
        GROUP BY m.blog_id
    </select>
    <!--通过用户的userId，博客创建时间查询该时间段所有博客-->
    <select id="showBlogByTime" parameterType="com.me.dto.BlogNumDto" resultType="com.me.dto.BlogDto">
        SELECT any_value(m.blog_id) id,any_value(m.blog_title) title,any_value(m.blog_content) content,any_value(m.create_time) time,any_value(m.user_id) userId,any_value(m.seeNum) seeNum,case when any_value(c.comment_id) is null then 0 else COUNT(*) end commentNum from
        (SELECT any_value(o.blog_id) blog_id,any_value(o.blog_title) blog_title,any_value(o.blog_content) blog_content,any_value(o.create_time) create_time,any_value(b.browse_id) browse_id,any_value(b.browse_time) browse_time,any_value(g.user_id) user_id,case when any_value(b.browse_id) is null then 0 else COUNT(*) end seeNum
        from bloginfo o
        INNER JOIN user_blog g on g.user_id=#{userId} and g.blog_id=o.blog_id and  YEAR(o.create_time)=#{years} and month(o.create_time)=#{months}
        LEFT JOIN browse b on b.blog_id=o.blog_id and b.user_id=g.user_id
        GROUP BY o.blog_id) m
        LEFT JOIN comment1 c on c.blog_id=m.blog_id and m.user_id=c.user_id
        GROUP BY m.blog_id
    </select>
    <!--通过用户id与用户个人分类id查询所有新增博客-->
    <select id="showBlogByClassId" parameterType="com.me.dto.ClassificationDto" resultType="com.me.dto.BlogDto">
        SELECT any_value(m.blog_id) id,any_value(m.blog_title) title,any_value(m.blog_content) content,any_value(m.create_time) time,any_value(m.user_id) userId,any_value(m.seeNum) seeNum,case when any_value(c.comment_id) is null then 0 else COUNT(*) end commentNum from
        (SELECT any_value(o.blog_id) blog_id,any_value(o.blog_title) blog_title,any_value(o.blog_content) blog_content,any_value(o.create_time) create_time,any_value(b.browse_id) browse_id,any_value(b.browse_time) browse_time,any_value(g.user_id) user_id,case when any_value(b.browse_id) is null then 0 else COUNT(*) end seeNum
        from bloginfo o
        INNER JOIN user_blog g on g.user_id=#{userId} and g.blog_id=o.blog_id
		INNER JOIN pbt_middle t on t.blog_id=o.blog_id
		INNER JOIN person_type f on f.pt_id=t.bt_id and f.pt_id=#{classId}
        LEFT JOIN browse b on b.blog_id=o.blog_id and b.user_id=g.user_id
        GROUP BY o.blog_id) m
        LEFT JOIN comment1 c on c.blog_id=m.blog_id and m.user_id=c.user_id
        GROUP BY m.blog_id
    </select>

</mapper>