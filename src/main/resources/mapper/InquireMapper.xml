<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me.mapper.InquireMapper">


    <select id="getBlogsByTypeName" resultType="com.me.dto.ShowDto" parameterType="com.me.vo.ShowVo">
          SELECT tb3.blog_id,tb3.blog_title,tb3.blog_content,tb3.create_time,tb3.name,tb3.type_name,tb3.cnumber,tb3.bnumber,tb3.user_id
            from(SELECT * from (SELECT b.*,u.name,bt.type_name,u.user_id from bloginfo b,userinfo u,blog_type bt,user_blog ub
            WHERE b.blog_id = ub.blog_id and ub.user_id = u.user_id and b.bt_id = bt.bt_id
            <if test="type_name !=null and type_name !=''">
                and bt.type_name = #{type_name}
            </if>
            and b.`status`=1 ) tb1
            LEFT JOIN (SELECT c.blog_id bid ,COUNT(c.blog_id) as cnumber from comment1 c,blog_type bt,bloginfo b
            where b.blog_id = c.blog_id
            <if test="type_name !=null and type_name !=''">
                and bt.type_name = #{type_name}
            </if>
            and b.bt_id = bt.bt_id GROUP BY bid) tb2 on tb1.blog_id = tb2.bid
            LEFT JOIN (SELECT br.blog_id bid2,COUNT(DISTINCT br.user_id) as bnumber from browse br,blog_type bt,bloginfo b
            where b.blog_id = br.blog_id
            <if test="type_name !=null and type_name !=''">
                and bt.type_name = #{type_name}
            </if>
            and b.bt_id = bt.bt_id GROUP BY br.blog_id) tb4 on tb1.blog_id = tb4.bid2) tb3
    </select>

    <insert id="addPersonalCategory" parameterType="com.me.vo.ShowVo">
        insert into person_type values(default,#{type_name},1,#{user_id})
    </insert>

    <select id="allPersonalCategory" parameterType="com.me.vo.ShowVo" resultType="com.me.dto.ShowDto">
       SELECT  tb1.pt_id,count(DISTINCT tb1.type_name) wznumber,tb1.type_name,tb1.user_id from (SELECT b.*,u.user_id,u.user_name, pt.status ptstatus, pt.type_name from
        bloginfo b,userinfo u,user_blog ub,person_type pt where u.user_id = #{user_id} and u.user_id =pt.user_id and pt.status = 1 and u.user_id = ub.user_id and
        ub.blog_id = b.blog_id and b.pt_id =pt.pt_id) tb1 GROUP BY tb1.pt_id
    </select>

    <update id="deletePersonalCategory" parameterType="com.me.vo.ShowVo">
        update person_type set status = 0 where  pt_id = #{pt_id}
    </update>

    <update id="updatePersonalCategory" parameterType="com.me.vo.ShowVo">
          update person_type pt set pt.type_name = #{type_name}  where pt.status = 1 and pt.pt_id = #{pt_id}
    </update>

    <select id="searchBlogs" parameterType="com.me.vo.ShowVo" resultType="com.me.dto.ShowDto">
        SELECT any_value(m.blog_id) blog_id,any_value(m.blog_title) blog_title,any_value(m.blog_content) blog_content,
        any_value(m.create_time) create_time,any_value(m.user_id) user_id,any_value(m.name) name,any_value(m.user_name) user_name,
        any_value(m.bnumber) bnumber,case when any_value(c.comment_id) is null then 0 else COUNT(*) end cnumber from
        (SELECT any_value(o.blog_id) blog_id,any_value(o.blog_title) blog_title,any_value(o.blog_content) blog_content,
        any_value(o.create_time) create_time,any_value(b.browse_id) browse_id,any_value(b.browse_time) browse_time,
        any_value(g.user_id) user_id,any_value(r.name) name,
        any_value(r.user_name) user_name,case when any_value(b.browse_id) is null then 0 else COUNT(DISTINCT b.browse_id) end bnumber
        from bloginfo o
        INNER JOIN user_blog g on  g.blog_id=o.blog_id and o.blog_title LIKE #{blog_title} or o.blog_content LIKE #{blog_content}
        INNER JOIN userinfo r on r.user_id=g.user_id
        LEFT JOIN browse b on b.blog_id=o.blog_id and b.user_id=g.user_id
        GROUP BY o.blog_id) m
        LEFT JOIN comment1 c on c.blog_id=m.blog_id and m.user_id=c.user_id
        GROUP BY m.blog_id
    </select>



    <select id="getBlogsByUserId" parameterType="com.me.vo.ShowVo" resultType="com.me.dto.ShowDto">
        SELECT tb3.blog_id,tb3.blog_title,tb3.blog_content,tb3.create_time,tb3.`name`,tb3.type_name,tb3.cnumber,tb3.bnumber
                from
        (SELECT * from (SELECT b.*,u.name,u.user_id,bt.type_name from bloginfo b,userinfo u,blog_type bt,user_blog ub
                WHERE b.blog_id = ub.blog_id and ub.user_id = u.user_id and b.bt_id = bt.bt_id and u.user_id = #{user_id} and b.`status` =1) tb1

                LEFT JOIN (SELECT c.blog_id bid,COUNT(c.blog_id) as cnumber from comment1 c,bloginfo b,userinfo u, user_blog ub where c.blog_id = b.blog_id
        and b.blog_id = ub.blog_id and ub.user_id = u.user_id and u.user_id= #{user_id} GROUP BY c.blog_id) tb2
                on tb1.blog_id = tb2.bid

        LEFT JOIN (SELECT br.blog_id bid2,COUNT(DISTINCT br.user_id) as bnumber from browse br,bloginfo b,userinfo u, user_blog ub where br.blog_id = b.blog_id
        and b.blog_id = ub.blog_id and ub.user_id = u.user_id and u.user_id= #{user_id} GROUP BY br.blog_id) tb4
                on tb1.blog_id = tb4.bid2 ) tb3
    </select>

    <!--查询个人分类类型-->
    <select id="selectPersonType" resultType="com.me.dto.Person_TypeDto">
        SELECT pt_id,type_name persontype_name FROM person_type
    </select>

    <!--查询博客类型-->
    <select id="selectBlogType" resultType="com.me.dto.Blog_TypeDto">
        SELECT bt_id,type_name blogtype_name FROM blog_type
    </select>


    <!--写博客-->
    <update id="writeBlog" parameterType="com.me.vo.WriteBlogVo">
        INSERT INTO bloginfo(blog_title,blog_content,bt_id,create_time,pt_id) VALUES(#{txtTitle},#{content},#{blogType},NOW(),#{typeSpan});
    </update>

    <!--获取最新博客id-->
    <select id="selectMaxBlog_id" resultType="int">
        SELECT MAX(blog_id) FROM bloginfo
    </select>

    <!--用户_博客中间表插入数据-->
    <insert id="insertUser_Blog" parameterType="com.me.vo.WriteBlogVo">
        INSERT INTO user_blog (user_id,blog_id) VALUES (#{user_id},#{blog_id})
    </insert>

    <update id="deleteBlogbyBlog_id" parameterType="com.me.vo.ShowVo">
         update bloginfo set status = 0 where blog_id = #{blog_id}
    </update>

</mapper>